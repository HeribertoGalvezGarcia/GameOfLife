{"version":3,"sources":["actions/index.js","reducers/index.js","components/Node.js","components/Grid.js","components/Controller.js","App.js","index.js"],"names":["setDimensions","height","width","type","payload","nodes","Array","map","setGrid","generateGeneration","generation","newNodes","i","length","aliveNeighbors","node","hasLeft","hasRight","hasTop","hasBottom","push","includes","initialState","running","StyledNode","styled","div","alive","Node","index","useSelector","dispatch","useDispatch","onClick","setAlive","StyledGrid","width_","Grid","disabled","_","key","Controller","presets","useEffect","interval","setInterval","clearInterval","placeholder","value","onChange","target","slice","name","Math","random","setRunning","App","store","createStore","state","newState","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0b211bfa.chunk.js","sourcesContent":["const SET_DIMENSIONS = 'SET_DIMENSIONS';\nconst SET_GRID = 'SET_GRID';\nconst SET_ALIVE = 'SET_ALIVE';\nconst GENERATE_GENERATION = 'GENERATE_GENERATION';\nconst SET_RUNNING = 'SET_RUNNING';\n\nfunction setDimensions(height, width) {\n  return {type: SET_DIMENSIONS, payload: {height, width, nodes: [...new Array(height * width)].map(() => false)}};\n}\n\nfunction setGrid(height, width, nodes) {\n  return {type: SET_GRID, payload: {height, width, nodes}};\n}\n\nfunction setAlive(node, alive) {\n  return {type: SET_ALIVE, payload: {node, alive}};\n}\n\nfunction generateGeneration(nodes, width, generation) {\n  const newNodes = [];\n\n  for (let i = 0; i < nodes.length; ++i) {\n    let aliveNeighbors = 0;\n\n    const node = nodes[i];\n\n    const hasLeft = i % width !== 0;\n    const hasRight = (i + 1) % width !== 0;\n    const hasTop = i - width >= 0;\n    const hasBottom = i + width < nodes.length;\n\n    if (hasTop) {\n      if (hasLeft && nodes[i-width-1] === true) ++aliveNeighbors;\n      if (nodes[i-width] === true) ++aliveNeighbors;\n      if (hasRight && nodes[i-width+1] === true) ++aliveNeighbors;\n    }\n\n    if (hasLeft && nodes[i-1] === true) ++aliveNeighbors;\n    if (hasRight && nodes[i+1] === true) ++aliveNeighbors;\n\n    if (hasBottom) {\n\n      if (hasLeft && nodes[i+width-1] === true) ++aliveNeighbors;\n      if (nodes[i+width] === true) ++aliveNeighbors;\n      if (hasRight && nodes[i+width+1] === true) ++aliveNeighbors;\n    }\n\n    newNodes.push(node ? [2, 3].includes(aliveNeighbors) : aliveNeighbors === 3);\n  }\n\n  return {type: GENERATE_GENERATION, payload: {nodes: newNodes, generation: generation+1}};\n}\n\nfunction setRunning(running) {\n  return {type: SET_RUNNING, payload: running};\n}\n\nexport {SET_DIMENSIONS, SET_GRID, SET_ALIVE, GENERATE_GENERATION, SET_RUNNING, setDimensions, setGrid, setAlive, generateGeneration, setRunning};\n","import {GENERATE_GENERATION, SET_DIMENSIONS, SET_RUNNING, SET_ALIVE, SET_GRID} from \"../actions\";\n\nconst height = 25;\nconst width = 25;\n\nconst initialState = {\n  nodes: [...new Array(height * width)].map(() => false),\n  height,\n  width,\n  generation: 0,\n  running: false\n};\n\nfunction reducer(state = initialState, {type, payload}) {\n  const newState = {...state};\n\n  switch (type) {\n    case SET_DIMENSIONS:\n    case SET_GRID:\n      newState.height = payload.height;\n      newState.width = payload.width;\n      newState.nodes = payload.nodes;\n      return newState;\n    case SET_ALIVE:\n      newState.nodes[payload.node] = payload.alive;\n      return newState;\n    case GENERATE_GENERATION:\n      newState.nodes = payload.nodes;\n      newState.generation = payload.generation;\n      return newState;\n    case SET_RUNNING:\n      newState.running = payload;\n      return newState;\n    default:\n      return newState;\n  }\n}\n\nexport {initialState, reducer};\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {setAlive} from \"../actions\";\n\nconst StyledNode = styled.div`\n  box-sizing: border-box;\n  height: 10px;\n  width: 10px;\n  border: 1px solid grey;\n  background-color: ${({alive}) => alive ? \"black\" : \"white\"};\n`;\n\nfunction Node({index}) {\n  const [alive, running] = useSelector(({nodes, running}) => [nodes[index], running]);\n  const dispatch = useDispatch();\n\n  return <StyledNode alive={alive} onClick={() => !running && dispatch(setAlive(index, !alive))} />\n}\n\nexport default Node;\n","import React from \"react\";\nimport Node from \"./Node\";\nimport styled from \"styled-components\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {generateGeneration} from \"../actions\";\n\nconst StyledGrid = styled.div`\n  display: flex;\n  flex-direction: row;\n  flex-wrap: wrap;\n  width: ${({width_}) => `${width_*10}px`};\n`;\n\nfunction Grid() {\n  const [width, nodes, running] = useSelector(({width, nodes, running}) => [width, nodes, running]);\n  const dispatch = useDispatch();\n\n  return (\n    <>\n      <button disabled={running} onClick={() => dispatch(generateGeneration(nodes, width))}>Next Generation</button>\n      <StyledGrid width_={width}>\n        {nodes.map((_, i) => <Node key={i} index={i} />)}\n      </StyledGrid>\n    </>\n  );\n}\n\nexport default Grid;\n","import React, {useEffect} from \"react\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {generateGeneration, setRunning, setGrid, setDimensions} from \"../actions\";\n\nfunction Controller() {\n  const [nodes, height, width, generation, running] = useSelector(({nodes, height, width, generation, running}) => [nodes, height, width, generation, running]);\n  const dispatch = useDispatch();\n\n  const presets = [\n    ['Block', 4, 4, [false, false, false, false, false, true, true, false, false, true, true, false, false, false, false, false]],\n    ['Beehive', 5, 6, [false, false, false, false, false, false, false, false, true, true, false, false, false, true, false, false, true, false, false, false, true, true, false, false, false, false, false, false, false, false]],\n    ['Loaf', 6, 6, [false, false, false, false, false, false, false, false, true, true, false, false, false, true, false, false, true, false, false, false, true, false, true, false, false, false, false, true, false, false, false, false, false, false, false, false]],\n    ['Boat', 5, 5, [false, false, false, false, false, false, true, true, false, false, false, true, false, true, false, false, false, true, false, false, false, false, false, false, false]],\n    ['Tub', 5, 5, [false, false, false, false, false, false, false, true, false, false, false, true, false, true, false, false, false, true, false, false, false, false, false, false, false]]\n  ];\n\n  useEffect(() => {\n    if (!running) return;\n\n    const interval = setInterval(() => dispatch(generateGeneration(nodes, width, generation)), 1000);\n\n    return () => clearInterval(interval);\n  }, [running, dispatch, generation, nodes, width]);\n\n  return (\n    <>\n      {generation}\n\n      <input disabled={running} type=\"text\" placeholder=\"height\" value={height} onChange={({target: {value}}) => dispatch(setDimensions(value, width))} />\n      <input disabled={running} type=\"text\" placeholder=\"width\" value={width} onChange={({target: {value}}) => dispatch(setDimensions(height, value))} />\n\n      <select disabled={running} onChange={({target: {value}}) => dispatch(setGrid(...presets[value].slice(1)))}>\n        {presets.map(([name], i) => <option value={i} key={i}>{name}</option>)}\n      </select>\n\n      <button disabled={running} onClick={() => dispatch(setGrid(height, width, [...Array(height * width)].map(() => Math.random() < 0.5)))}>Random</button>\n\n      <button onClick={() => dispatch(setRunning(!running))}>{running ? \"Stop\" : \"Run\"}</button>\n      <button disabled={running} onClick={() => dispatch(setDimensions(height, width))}>Clear</button>\n    </>\n  )\n}\n\nexport default Controller;\n","import React from 'react';\nimport Grid from \"./components/Grid\";\nimport Controller from \"./components/Controller\";\n\nfunction App() {\n  return (\n    <>\n      <Controller/>\n      <Grid />\n\n      Rules: If a cell is alive and it has two or three alive neighbors it continues living. Otherwise it dies. If a cell is dead and it has three neighbors it becomes alive.\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {Provider} from 'react-redux';\nimport {createStore} from 'redux';\nimport {reducer} from \"./reducers\";\nimport App from './App';\n\nconst store = createStore(reducer);\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}